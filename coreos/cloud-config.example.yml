coreos: 
  units: 
    - name: logsene.service
      command: start
      runtime: no
      content: |
        [Unit]
        Description=Logsene Log Forwarder
        [Service]
        Restart=always
        RestartSec=10s
        ExecStartPre=/bin/sh -c "if [ -n \"$(etcdctl get /sematext.com/logsene/`hostname`/lastlog)\" ]; then  echo \"Value Exists: /sematext.com/logsene/`hostname`/lastlog $(etcdctl get /sematext.com/logsene/`hostname`/lastlog)\"; else etcdctl set /sematext.com/logsene/`hostname`/lastlog\"`date +\"%Y-%%m-%d %%H:%M:%S\"`\"; fi"
        ExecStart=/bin/sh -c "journalctl --since \"$(etcdctl get /sematext.com/logsene/`hostname`/lastlog)\" -o short -f | ncat --ssl logsene-receiver-syslog.sematext.com  10514"
        ExecStopPost=/bin/sh -c "export D=\"`date +\"%Y-%%m-%%d %%H:%M:%S\"`\"; /bin/etcdctl set /sematext.com/logsene/$(hostname)/lastlog \"$D\""
        [Install]
        WantedBy=multi-user.target
        [X-Fleet]
        Global=true

    - name: spm-agent.service
      command: start
      runtime: no
      content: |
        [Unit]
        Description=SPM Docker Agent
        After=docker.service
        Requires=docker.service
        [Service]
        TimeoutStartSec=0
        Restart=always
        RestartSec=30s
        ExecStartPre=-/usr/bin/docker kill spm-agent
        ExecStartPre=-/usr/bin/docker rm spm-agent
        ExecStartPre=/usr/bin/docker pull sematext/spm-agent-docker:latest
        ExecStart=/bin/sh -c 'set -ex; /usr/bin/docker run --name spm-agent -e SPM_TOKEN=$(etcdctl get SPM_TOKEN) -e HOSTNAME=$HOSTNAME -v /var/run/docker.sock:/var/run/docker.sock sematext/spm-agent-docker'
        ExecStop=/usr/bin/docker stop spm-agent
        [Install]
        WantedBy=multi-user.target
        [X-Fleet]
        Global=true
